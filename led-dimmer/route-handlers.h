#pragma once

#include "Arduino.h"
#include <ESP8266WebServer.h>
#include <NTPClient.h>

#include "AutoConfig.h"
#include "number-parsing.h"

extern ESP8266WebServer server;
extern unsigned int currentPercentage;
extern NTPClient timeClient;

void httpServerHandleRoot();
void httpServerHandleNotFound();
void httpServerHandleDimValue();
void httpServerHandleTime();
void httpServerHandleTimeUpdate();
void httpServerHandleConfig(int index, AutoConfig& config);

const char* const indexPage = "<!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> <title>LedDimmer config page</title> <script> const urlBase=''; function setCurrent(value) { const headers = {'Content-Type': 'text/plain'}; fetch( `${urlBase}/current`, { headers, method: 'POST', body: value }); } async function getAndWriteTime() { const time = await (await fetch(`${urlBase}/time`)).text(); document.querySelector('#currentTime').textContent = time; } function forceTimeUpdate() { const time = fetch(`${urlBase}/time/update`); getAndWriteTime(); } async function getAndWriteConfig(index) { const config = await (await fetch(`${urlBase}/config/${index}`)).json(); document.querySelector(`[data-config-index=\"${index}\"] [name=enabled]`).checked = config.enabled; document.querySelector(`[data-config-index=\"${index}\"] [name=startTime]`).value = config.startTime; document.querySelector(`[data-config-index=\"${index}\"] [name=endTime]`).value = config.endTime; document.querySelector(`[data-config-index=\"${index}\"] [name=percentage]`).value = config.percentage; document.querySelector(`[data-config-index=\"${index}\"] .loading`).style.display = 'none'; document.querySelectorAll(`[data-config-index=\"${index}\"] input[name=\"daysOfWeek\"]`).forEach((elem) => elem.checked = config.daysOfWeek.includes(elem.value)); document.querySelectorAll(`[data-config-index=\"${index}\"] [type=\"time\"]`).forEach(printEffective); } async function updateConfig(index) { document.querySelector(`[data-config-index=\"${index}\"] .loading`).style.display = 'block'; const form = document.querySelector(`[data-config-index=\"${index}\"] form`); const data = new URLSearchParams(new FormData(form)); data.set('daysOfWeek', data.getAll('daysOfWeek').join(',')); await fetch( `${urlBase}/config/${index}`, { method: 'POST', body: data }); await getAndWriteConfig(index); } function setCurrentManually() { setCurrent(document.querySelector('#manualInput').value); } function printEffective(elem) { const offsetInMinutes = new Date().getTimezoneOffset(); const utcHours = elem.valueAsDate.getUTCHours(); const utcMinutes = elem.valueAsDate.getUTCMinutes(); const localHours = parseInt((utcHours * 60 + utcMinutes - offsetInMinutes) / 60 % 24); const localMinutes = (utcHours * 60 + utcMinutes - offsetInMinutes) % 60; const localString = localHours.toString().padStart(2,'0') + \":\" + localMinutes.toString().padStart(2,'0'); elem.nextElementSibling.textContent = localString; } getAndWriteTime(); setInterval(getAndWriteTime, 10000); getAndWriteConfig(0); getAndWriteConfig(1); getAndWriteConfig(2); getAndWriteConfig(3); getAndWriteConfig(4); if(location.search.includes('mode=dark')) { document.querySelector('html').dataset.mode='dark'; } </script> <style> html[data-mode='dark'], html[data-mode='dark'] button, html[data-mode='dark'] input { color: #ddd; background-color: #222; } html[data-mode='dark'] button, html[data-mode='dark'] input { background-color: #333; border: 1px solid #ddd; border-radius: 2px; } @media (prefers-color-scheme: dark) { html[data-mode='dark'], html[data-mode='dark'] button, html[data-mode='dark'] input { color: #ddd; background-color: #222; } html[data-mode='dark'] button, html[data-mode='dark'] input { background-color: #333; border: 1px solid #ddd; border-radius: 2px; } } label { margin-right: 5ex; white-space: nowrap; } .days-of-week label { margin: 0; } .days-of-week label ~ label { margin-left: 2ex;} .auto-config-set { position: relative; } .auto-config-set .loading { position: absolute; width: calc(100% - 15px); height: calc(100% - 15px); background: rgba(255,255,255,0.9); font-size: 1.5em; } </style> </head> <body> <h1>LedDimmer</h1> <fieldset> <legend>Presets</legend> <button onclick=\"setCurrent(100)\">An (100%)</button> <button onclick=\"setCurrent(70)\">An (70%)</button> <button onclick=\"setCurrent(30)\">An (30%)</button> <button onclick=\"setCurrent(0)\">Aus (0%)</button> </fieldset> <fieldset> <legend>Manual</legend> <input id=\"manualInput\" type=\"range\" min=\"0\" max=\"100\" value=\"-1\" oninput=\"this.nextElementSibling.value = this.value\"> <output>---</output> <button onclick=\"setCurrentManually()\">Setzen</button> </fieldset> <fieldset> <legend>Datum und Uhrzeit</legend> <span id=\"currentTime\">Lade...</span> (UTC) <button onclick=\"forceTimeUpdate()\">Force Update</button> </fieldset> <h2>Automatisiertes Schalten</h2> <p>Beachte: Uhrzeiten m√ºssen in UTC angegeben werden (vergleiche Uhrzeit oben).</p> <!-- TODO: minimize using template? --> <fieldset class=\"auto-config-set\" data-config-index=\"0\"> <div class=\"loading\">Lade...</div> <legend>Automatisches ein- und ausschalten Config 1</legend> <form> <label>Aktiviert <input type=\"checkbox\" name=\"enabled\"></label> <label>Anschalten um <input type=\"time\" name=\"startTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Abschalten um <input type=\"time\" name=\"endTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Wert <input type=\"number\" min=\"0\" max=\"100\" name=\"percentage\" required></label> <br /> <span class=\"days-of-week\">Aktiv am <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Mon\" /> Montag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Tue\" /> Dienstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Wed\" /> Mittwoch</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Thu\" /> Donnerstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Fri\" /> Freitag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sat\" /> Samstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sun\" /> Sonntag</label> </span> <br /> <button onclick=\"updateConfig(0);return false;\">Speichern</button> </form> </fieldset> <fieldset class=\"auto-config-set\" data-config-index=\"1\"> <div class=\"loading\">Lade...</div> <legend>Automatisches ein- und ausschalten Config 2</legend> <form> <label>Aktiviert <input type=\"checkbox\" name=\"enabled\"></label> <label>Anschalten um <input type=\"time\" name=\"startTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Abschalten um <input type=\"time\" name=\"endTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Wert <input type=\"number\" min=\"0\" max=\"100\" name=\"percentage\" required></label> <br /> <span class=\"days-of-week\">Aktiv am <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Mon\" /> Montag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Tue\" /> Dienstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Wed\" /> Mittwoch</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Thu\" /> Donnerstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Fri\" /> Freitag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sat\" /> Samstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sun\" /> Sonntag</label> </span> <br /> <button onclick=\"updateConfig(1);return false;\">Speichern</button> </form> </fieldset> <fieldset class=\"auto-config-set\" data-config-index=\"2\"> <div class=\"loading\">Lade...</div> <legend>Automatisches ein- und ausschalten Config 3</legend> <form> <label>Aktiviert <input type=\"checkbox\" name=\"enabled\"></label> <label>Anschalten um <input type=\"time\" name=\"startTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Abschalten um <input type=\"time\" name=\"endTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Wert <input type=\"number\" min=\"0\" max=\"100\" name=\"percentage\" required></label> <br /> <span class=\"days-of-week\">Aktiv am <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Mon\" /> Montag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Tue\" /> Dienstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Wed\" /> Mittwoch</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Thu\" /> Donnerstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Fri\" /> Freitag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sat\" /> Samstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sun\" /> Sonntag</label> </span> <br /> <button onclick=\"updateConfig(2);return false;\">Speichern</button> </form> </fieldset> <fieldset class=\"auto-config-set\" data-config-index=\"3\"> <div class=\"loading\">Lade...</div> <legend>Automatisches ein- und ausschalten Config 4</legend> <form> <label>Aktiviert <input type=\"checkbox\" name=\"enabled\"></label> <label>Anschalten um <input type=\"time\" name=\"startTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Abschalten um <input type=\"time\" name=\"endTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Wert <input type=\"number\" min=\"0\" max=\"100\" name=\"percentage\" required></label> <br /> <span class=\"days-of-week\">Aktiv am <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Mon\" /> Montag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Tue\" /> Dienstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Wed\" /> Mittwoch</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Thu\" /> Donnerstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Fri\" /> Freitag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sat\" /> Samstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sun\" /> Sonntag</label> </span> "
"<br /> <button onclick=\"updateConfig(3);return false;\">Speichern</button> </form> </fieldset> <fieldset class=\"auto-config-set\" data-config-index=\"4\"> <div class=\"loading\">Lade...</div> <legend>Automatisches ein- und ausschalten Config 5</legend> <form> <label>Aktiviert <input type=\"checkbox\" name=\"enabled\"></label> <label>Anschalten um <input type=\"time\" name=\"startTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Abschalten um <input type=\"time\" name=\"endTime\" required onInput=\"printEffective(this)\"> UTC (Lokal: <output></output>)</label> <label>Wert <input type=\"number\" min=\"0\" max=\"100\" name=\"percentage\" required></label> <br /> <span class=\"days-of-week\">Aktiv am <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Mon\" /> Montag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Tue\" /> Dienstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Wed\" /> Mittwoch</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Thu\" /> Donnerstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Fri\" /> Freitag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sat\" /> Samstag</label> <label><input type=\"checkbox\" name=\"daysOfWeek\" value=\"Sun\" /> Sonntag</label> </span> <br /> <button onclick=\"updateConfig(4);return false;\">Speichern</button> </form> </fieldset> </body> </html>";
const char* const contentType = "Content-Type";
